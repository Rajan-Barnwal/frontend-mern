{"ast":null,"code":"/*!\n * Chart.js v3.4.0\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as log10, J as _factorize, K as finiteOrDefault, L as callback, M as _addGrace, N as toDegrees, O as _measureText, Q as _int16Range, R as _alignPixel, S as clipArea, U as renderText, V as unclipArea, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as setsEqual, ac as _elementsEqual, ad as getAngleFromPoint, ae as _readValueToProps, af as _updateBezierControlPoints, ag as _computeSegments, ah as _boundSegments, ai as _steppedInterpolation, aj as _bezierInterpolation, ak as _pointInLine, al as _steppedLineTo, am as _bezierCurveTo, an as drawPoint, ao as addRoundedRectPath, ap as toTRBL, aq as toTRBLCorners, ar as _boundSegment, as as _normalizeAngle, at as getRtlAdapter, au as overrideTextDirection, av as _textX, aw as restoreTextDirection, ax as noop, ay as distanceBetweenPoints, az as _setMinAndMaxByKey, aA as niceNum, aB as almostWhole, aC as almostEquals, aD as _decimalPlaces, aE as _longestText, aF as _filterBetween, aG as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || elapsed < duration);\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = elapsed / duration % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({\n        res,\n        rej\n      });\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      }\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {});\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n  return options;\n}\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if (positive && value > 0 || !positive && value < 0) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {\n    chart,\n    _cachedMeta: meta\n  } = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {\n    iScale,\n    vScale,\n    index: datasetIndex\n  } = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {\n      [iAxis]: index,\n      [vAxis]: value\n    } = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[axis][meta.index];\n  }\n}\nconst isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale ? meta.vScale : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {\n      _cachedMeta: meta,\n      _data: data\n    } = me;\n    const {\n      iScale,\n      _stacked\n    } = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {\n      mode\n    });\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {\n        all: true\n      });\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {\n      keys: getSortedDatasetIndices(me.chart, true),\n      values: null\n    };\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    const {\n      min: otherMin,\n      max: otherMax\n    } = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || elements.length - start;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context || (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context || (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: !active && this.getSharedOptions(options) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = arr => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._syncList.push(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._syncList.push(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._syncList.push(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._syncList.push(['_removeElements', start, count]);\n    this._syncList.push(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._syncList.push(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n        base,\n        head: base\n      } : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || me.index === stack._top || me.index === stack._bottom,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = name !== undefined ? stacks.indexOf(name) : -1;\n    return index === -1 ? stacks.length - 1 : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {\n      vScale,\n      _stacked\n    } = me._cachedMeta;\n    const {\n      base: baseValue,\n      minBarLength\n    } = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {\n      data,\n      _parsed\n    } = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale\n    } = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {\n        $shared: false\n      });\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {\n    ratioX,\n    ratioY,\n    offsetX,\n    offsetY\n  };\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {\n      chartArea\n    } = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {\n      circumference,\n      rotation\n    } = me._getRotationExtents();\n    const {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    } = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n};\nDoughnutController.descriptors = {\n  _scriptable: name => name !== 'spacing',\n  _indexable: name => name !== 'spacing'\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      dataset: line,\n      data: points = [],\n      _dataset\n    } = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {\n      start,\n      count\n    } = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked\n    } = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && parsed[iAxis] - prevParsed[iAxis] > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {\n      iScale,\n      _parsed\n    } = meta;\n    const axis = iScale.axis;\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {\n    start,\n    count\n  };\n}\nfunction scaleRangesChanged(meta) {\n  const {\n    xScale,\n    yScale,\n    _scaleRanges\n  } = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - radiusLength * me.index;\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\nclass PieController extends DoughnutController {}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\nclass ScatterController extends LineController {}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({\n      index,\n      data\n    } = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {\n    controller,\n    data,\n    _sorted\n  } = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {\n      index,\n      data\n    } = metasets[i];\n    const {\n      lo,\n      hi\n    } = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{\n        element,\n        datasetIndex,\n        index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach(meta => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({\n            element,\n            datasetIndex: meta.index,\n            index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex,\n            index: i\n          });\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(pos => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    const {\n      same,\n      other\n    } = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.bottom : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, layout => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {\n    x,\n    y\n  } = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {\n    childList: true\n  });\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled(event => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, args => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(prop => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach(key => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && _getParentNode(container));\n  }\n}\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {\n      notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {\n  formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash'\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: name => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: name => name !== 'backdropPadding'\n});\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\nconst reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, cache => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {\n    top,\n    left,\n    bottom,\n    right\n  } = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {\n    titleX,\n    titleY,\n    maxWidth,\n    rotation\n  };\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {\n      _userMin,\n      _userMax,\n      _suggestedMin,\n      _suggestedMax\n    } = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {\n        min,\n        max\n      };\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal() ? me.width + margins.left + margins.right : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)), Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {\n      chart,\n      options: {\n        ticks: tickOpts,\n        title: titleOpts,\n        grid: gridOpts\n      }\n    } = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {\n          first,\n          last,\n          widest,\n          highest\n        } = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {\n      ticks: {\n        align,\n        padding\n      },\n      position\n    } = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {\n      axis,\n      position\n    } = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {\n      ctx,\n      _longestTextCache: caches\n    } = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {\n        data: {},\n        gc: []\n      };\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = idx => ({\n      width: widths[idx] || 0,\n      height: heights[idx] || 0\n    });\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {\n      min,\n      max\n    } = this;\n    return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context || (tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context || (me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {\n      grid,\n      position\n    } = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function (pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {\n      position,\n      ticks: optionTicks\n    } = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {\n      align,\n      crossAlign,\n      padding,\n      mirror\n    } = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n          case 'middle':\n            top -= height / 2;\n            break;\n          case 'bottom':\n            top -= height;\n            break;\n        }\n        switch (textAlign) {\n          case 'center':\n            left -= width / 2;\n            break;\n          case 'right':\n            left -= width;\n            break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {\n      position,\n      ticks\n    } = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {\n      position,\n      ticks: {\n        crossAlign,\n        mirror,\n        padding\n      }\n    } = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {\n      textAlign,\n      x\n    };\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {\n        top: 0,\n        left: me.left,\n        bottom: chart.height,\n        right: me.right\n      };\n    }\n    if (position === 'top' || position === 'bottom') {\n      return {\n        top: me.top,\n        left: 0,\n        bottom: me.bottom,\n        right: chart.width\n      };\n    }\n  }\n  drawBackground() {\n    const {\n      ctx,\n      options: {\n        backgroundColor\n      },\n      left,\n      top,\n      width,\n      height\n    } = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine({\n            x: item.x1,\n            y: item.y1\n          }, {\n            x: item.x2,\n            y: item.y2\n          }, item);\n        }\n        if (grid.drawTicks) {\n          drawLine({\n            x: item.tx1,\n            y: item.ty1\n          }, {\n            x: item.tx2,\n            y: item.ty2\n          }, {\n            color: item.tickColor,\n            width: item.tickWidth,\n            borderDash: item.tickBorderDash,\n            borderDashOffset: item.tickBorderDashOffset\n          });\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {\n      chart,\n      ctx,\n      options: {\n        grid\n      }\n    } = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {\n      ctx,\n      options: {\n        position,\n        title,\n        reverse\n      }\n    } = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || reg === me.plugins && arg.id) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {\n      options,\n      type\n    } = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {\n      options,\n      type\n    } = this;\n    return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n      type\n    }, defaults, descriptors];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {\n      $shared: true\n    };\n    const {\n      resolver,\n      subPrefixes\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {\n      resolver\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {\n    isScriptable,\n    isIndexable\n  } = _descriptors(proxy);\n  for (const prop of names) {\n    if (isScriptable(prop) && isFunction(proxy[prop]) || isIndexable(prop) && isArray(proxy[prop])) {\n      return true;\n    }\n  }\n  return false;\n}\nvar version = \"3.4.0\";\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = key => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter(c => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {\n      options: {\n        aspectRatio,\n        maintainAspectRatio\n      },\n      width,\n      height,\n      _aspectRatio\n    } = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {\n        width,\n        height\n      };\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {\n      size: newSize\n    });\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(Object.keys(scaleOpts).map(id => {\n        const scaleOptions = scaleOpts[id];\n        const axis = determineAxis(id, scaleOptions);\n        const isRadial = axis === 'r';\n        const isHorizontal = axis === 'x';\n        return {\n          options: scaleOptions,\n          dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n          dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n        };\n      }));\n    }\n    each(items, item => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, scale => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {\n      _metasets: metasets,\n      data: {\n        datasets\n      }\n    } = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {\n          datasetElementType,\n          dataElementType\n        } = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, scale => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {\n        controller\n      } = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, controller => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {\n      mode\n    });\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, box => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({\n        datasetIndex: i\n      }) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {\n      mode\n    });\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {\n      meta,\n      index,\n      mode,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({\n        chart: me\n      });\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {\n        width,\n        height\n      } = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {\n      chart: this,\n      type: 'chart'\n    });\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {\n      visible\n    });\n    me.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {\n      canvas,\n      ctx\n    } = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function (e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, type => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({\n      datasetIndex,\n      index\n    }) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {\n      event: e,\n      replay,\n      cancelable: true\n    };\n    const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {\n      _active: lastActive = [],\n      options\n    } = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, chart => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\nfunction clipArc(ctx, element, endAngle) {\n  const {\n    startAngle,\n    pixelMargin,\n    x,\n    y,\n    outerRadius,\n    innerRadius\n  } = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = val => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {\n    x,\n    y,\n    startAngle: start,\n    pixelMargin,\n    innerRadius: innerR\n  } = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {\n    outerStart,\n    outerEnd,\n    innerStart,\n    innerEnd\n  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference\n  } = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {\n    x,\n    y,\n    startAngle,\n    pixelMargin,\n    fullCircles\n  } = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {\n    options\n  } = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {\n      angle,\n      distance\n    } = getAngleFromPoint(point, {\n      x: chartX,\n      y: chartY\n    });\n    const {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius,\n      circumference\n    } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust;\n    return betweenAngles && withinRadius;\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const {\n      offset,\n      spacing\n    } = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {\n      options,\n      circumference\n    } = me;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    me.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset, spacing);\n    drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {\n    start: paramsStart = 0,\n    end: paramsEnd = count - 1\n  } = params;\n  const {\n    start: segmentStart,\n    end: segmentEnd\n  } = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {\n    points,\n    options\n  } = line;\n  const {\n    count,\n    start,\n    loop,\n    ilen\n  } = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {\n    move = true,\n    reverse\n  } = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {\n    count,\n    start,\n    ilen\n  } = pathVars(points, segment, params);\n  const {\n    move = true,\n    reverse\n  } = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {\n    segments,\n    options\n  } = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {\n      start,\n      end: start + count - 1\n    })) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {\n      property,\n      start: value,\n      end: value\n    });\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {\n        start,\n        end\n      } = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || me.points.length - start;\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {\n        start,\n        end: start + count - 1\n      });\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: name => name !== 'borderDash' && name !== 'fill'\n};\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {\n    [axis]: value\n  } = el.getProps([axis], useFinalPosition);\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nfunction getBarBounds(bar, useFinalPosition) {\n  const {\n    x,\n    y,\n    base,\n    width,\n    height\n  } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal ? parseEdge(edge, 'left', 'right', bar.base > bar.x) : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {\n    enableBorderRadius\n  } = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {\n      inner,\n      outer\n    } = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      horizontal\n    } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {\n      x: pointAx,\n      y: pointAy\n    } = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(dataset => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {\n    iScale\n  } = meta;\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {\n    start,\n    count\n  };\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {\n        _data,\n        indexAxis\n      } = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {\n        start,\n        count\n      } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return this._decimated;\n          },\n          set: function (d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n        default:\n          throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {\n    scale = {},\n    fill\n  } = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    bounds = bounds || {\n      start: 0,\n      end: TAU\n    };\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {\n    scale,\n    fill\n  } = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {\n    x = null,\n    y = null\n  } = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({\n    start,\n    end\n  }) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y\n      });\n      points.push({\n        x: last.x,\n        y\n      });\n    } else if (x !== null) {\n      points.push({\n        x,\n        y: first.y\n      });\n      points.push({\n        x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {\n    chart,\n    scale,\n    index,\n    line\n  } = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({\n    points,\n    options: {}\n  });\n}\nconst isLineAndNotInHideAnimation = meta => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {\n      first,\n      last,\n      point\n    } = findPoint(line, sourcePoint, 'x');\n    if (!point || first && last) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {\n    first,\n    last,\n    point\n  };\n}\nfunction getTarget(source) {\n  const {\n    chart,\n    fill,\n    line\n  } = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {\n      tension: 0\n    },\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {\n    property,\n    start,\n    end\n  };\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {\n      start,\n      end\n    } = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {\n    top,\n    bottom\n  } = scale.chart.chartArea;\n  const {\n    property,\n    start,\n    end\n  } = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {\n    line,\n    target,\n    property,\n    color,\n    scale\n  } = cfg;\n  const segments = _segments(line, target, property);\n  for (const {\n    source: src,\n    target: tgt,\n    start,\n    end\n  } of segments) {\n    const {\n      style: {\n        backgroundColor = color\n      } = {}\n    } = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {\n      move: lineLoop,\n      reverse: true\n    });\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {\n    line,\n    target,\n    above,\n    below,\n    area,\n    scale\n  } = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {\n      line,\n      target,\n      color: above,\n      scale,\n      property\n    });\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {\n    line,\n    target,\n    color: below,\n    scale,\n    property\n  });\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {\n    line,\n    scale,\n    axis\n  } = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {\n    above = color,\n    below = color\n  } = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale,\n      axis\n    });\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {\n    boxHeight = fontSize,\n    boxWidth = fontSize\n  } = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = me._margins.left;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = me._margins.top;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(item => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {\n      options,\n      ctx\n    } = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {\n      boxWidth,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {\n      ctx,\n      maxWidth,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {\n        left: 0,\n        top,\n        row,\n        width: itemWidth,\n        height: itemHeight\n      };\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {\n      ctx,\n      maxHeight,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({\n          width: currentColWidth,\n          height: currentColHeight\n        });\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {\n        left,\n        top: currentColHeight,\n        col,\n        width: itemWidth,\n        height: itemHeight\n      };\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({\n      width: currentColWidth,\n      height: currentColHeight\n    });\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {\n      legendHitBoxes: hitboxes,\n      options: {\n        align,\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {\n      options: opts,\n      columnSizes,\n      lineWidths,\n      ctx\n    } = me;\n    const {\n      align,\n      labels: labelOpts\n    } = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {\n      color: fontColor,\n      padding\n    } = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {\n      boxWidth,\n      boxHeight,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function (x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function (x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: ctx => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {\n          labels: {\n            usePointStyle,\n            pointStyle,\n            textAlign,\n            color\n          }\n        } = chart.legend.options;\n        return chart._getSortedDatasetMetas().map(meta => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: ctx => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: name => !name.startsWith('on'),\n    labels: {\n      _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n    }\n  }\n};\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      options\n    } = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {\n    element,\n    datasetIndex,\n    index\n  } = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {\n    label,\n    value\n  } = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {\n    body,\n    footer,\n    title\n  } = tooltip;\n  const {\n    boxWidth,\n    boxHeight\n  } = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function (line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 : 0;\n  each(body, bodyItem => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width,\n    height\n  };\n}\nfunction determineYAlign(chart, size) {\n  const {\n    y,\n    height\n  } = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {\n    x,\n    width\n  } = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {\n    x,\n    width\n  } = size;\n  const {\n    width: chartWidth,\n    chartArea: {\n      left,\n      right\n    }\n  } = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {\n    x,\n    width\n  } = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {\n    y,\n    height\n  } = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {\n    caretSize,\n    caretPadding,\n    cornerRadius\n  } = options;\n  const {\n    xAlign,\n    yAlign\n  } = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context || (me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const bodyItems = [];\n    each(tooltipItems, context => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, context => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {\n        chart: me._chart,\n        tooltip: me,\n        replay\n      });\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      cornerRadius,\n      caretSize\n    } = options;\n    const {\n      x: ptX,\n      y: ptY\n    } = tooltipPoint;\n    const {\n      width,\n      height\n    } = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {\n      x1,\n      x2,\n      x3,\n      y1,\n      y2,\n      y3\n    };\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {\n      boxHeight,\n      boxWidth\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {\n      body\n    } = me;\n    const {\n      bodySpacing,\n      bodyAlign,\n      displayColors,\n      boxHeight,\n      boxWidth\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function (line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + 1 : boxWidth + 2 : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      x,\n      y\n    } = pt;\n    const {\n      width,\n      height\n    } = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({\n      datasetIndex,\n      index\n    }) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {\n      caretX,\n      caretY,\n      options\n    } = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        _chart: chart,\n        options\n      });\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: plugin_filler,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\nconst addIfString = (labels, raw, index) => typeof raw === 'string' ? labels.push(raw) - 1 : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let {\n      min,\n      max\n    } = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({\n        value\n      });\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {\n    bounds,\n    step,\n    min,\n    max,\n    precision,\n    count,\n    maxTicks,\n    maxDigits,\n    includeBounds\n  } = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {\n    min: rmin,\n    max: rmax\n  } = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {\n  horizontal,\n  minRotation\n}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {\n      beginAtZero\n    } = me.options;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let {\n      min,\n      max\n    } = me;\n    const setMin = v => min = minDefined ? min : v;\n    const setMax = v => max = maxDefined ? max : v;\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {\n      maxTicksLimit,\n      stepSize\n    } = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\nfunction isMajor(tickVal) {\n  const remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => min = minDefined ? min : v;\n    const setMax = v => max = maxDefined ? max : v;\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min ? 0 : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = i === 0 ? tickBackdropHeight / 2 : 0;\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {\n    ctx,\n    options: {\n      pointLabels\n    }\n  } = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {\n      x,\n      y,\n      textAlign,\n      left,\n      top,\n      right,\n      bottom\n    } = scale._pointLabelItems[i];\n    const {\n      backdropColor\n    } = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {\n    ctx\n  } = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {\n    color,\n    lineWidth\n  } = gridLineOpts;\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n    me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {\n      backgroundColor,\n      grid: {\n        circular\n      }\n    } = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {\n      angleLines,\n      grid\n    } = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {\n          color,\n          lineWidth\n        } = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = Object.keys(INTERVALS);\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {\n    parser,\n    round,\n    isoWeekday\n  } = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {\n      lo,\n      hi\n    } = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {\n      min,\n      max\n    };\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min)) : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {\n      start,\n      end,\n      factor: 1 / (start + 1 + end)\n    };\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n      h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return me._cache.data = metas[0].controller.getAllParsedValues(me);\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return me._cache.data = me.normalize(timestamps);\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps);\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = _lookup(table, val);\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {\n      min,\n      max\n    } = me;\n    if (!timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n    const items = [min];\n    let i, ilen, curr;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n    items.push(max);\n    return items;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index) ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nconst registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","i","isObject","b","isArray","d","defaults","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","defined","s","sign","j","isNullOrUndef","_","_arrayUnique","t","toRadians","k","toPercentage","m","toDimension","T","TAU","n","formatNumber","o","_angleBetween","H","HALF_PI","P","PI","p","isNumber","q","_limitValue","w","_lookupByKey","x","getRelativePosition$1","y","_isPointInArea","z","_rlookupByKey","A","toPadding","B","each","C","getMaximumSize","D","_getParentNode","E","readUsedSize","F","throttled","G","supportsEventListenerOptions","I","log10","J","_factorize","K","finiteOrDefault","L","callback","M","_addGrace","N","toDegrees","O","_measureText","Q","_int16Range","R","_alignPixel","S","clipArea","U","renderText","V","unclipArea","W","toFont","X","_toLeftRightCenter","Y","_alignStartEnd","Z","overrides","$","merge","a0","_capitalize","a1","descriptors","a2","isFunction","a3","_attachContext","a4","_createResolver","a5","_descriptors","a6","mergeIf","a7","uid","a8","debounce","a9","retinaScale","aa","clearCanvas","ab","setsEqual","ac","_elementsEqual","ad","getAngleFromPoint","ae","_readValueToProps","af","_updateBezierControlPoints","ag","_computeSegments","ah","_boundSegments","ai","_steppedInterpolation","aj","_bezierInterpolation","ak","_pointInLine","al","_steppedLineTo","am","_bezierCurveTo","an","drawPoint","ao","addRoundedRectPath","ap","toTRBL","aq","toTRBLCorners","ar","_boundSegment","as","_normalizeAngle","at","getRtlAdapter","au","overrideTextDirection","av","_textX","aw","restoreTextDirection","ax","noop","ay","distanceBetweenPoints","az","_setMinAndMaxByKey","aA","niceNum","aB","almostWhole","aC","almostEquals","aD","_decimalPlaces","aE","_longestText","aF","_filterBetween","aG","_lookup","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","me","call","window","_update","Date","now","remaining","running","items","length","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","create","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","_onDataUnshift","prototype","getAllScaleValues","_cache","$bar","metas","concat","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","BarController","iAxisKey","vAxisKey","obj","bars","base","getBasePixel","horizontal","isHorizontal","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","enableBorderRadius","center","height","width","_getStacks","last","grouped","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","actualBase","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","rects","interaction","_index_","offset","grid","_value_","beginAtZero","BubbleController","points","point","iPixel","getPixelForDecimal","vPixel","skip","radius","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","hidden","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","pointCount","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","controllers","__proto__","abstract","Error","DateAdapter","formats","format","timestamp","amount","unit","diff","startOf","weekday","endOf","override","members","adapters","_date","getRelativePosition","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","jlen","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","_minPadding","evaluationFunc","inRange","getNearestItems","distanceMetric","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","v1","wrapBoxes","boxes","layoutBoxes","setLayoutDims","layouts","params","layout","fullSize","availableWidth","hBoxMaxHeight","vBoxMaxWidth","availableHeight","buildLayoutBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","placeBoxes","userPadding","padding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","createAttachObserver","container","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","args","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","Element","tooltipPosition","getProps","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","reverseAlign","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","getTicks","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","scope","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","includes","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","isDomSupported","getCanvas","getElementById","instances","getChart","Chart","initialCanvas","existingChart","platform","_initializePlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","console","error","_initialize","maintainAspectRatio","responsive","bindEvents","OffscreenCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","existingEvents","newEvents","events","unbindEvents","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateDatasetVisibility","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_updateHoverStyles","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","lastEvent","onHover","invalidatePlugins","enumerable","defineProperties","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","capBezierPoints","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","pointStyle","getBarBounds","bar","half","parseBorderSkipped","borderSkipped","parseEdge","swap","startEnd","orig","v2","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","configurable","getLineByIndex","parseFillOption","fillOption","decodeFill","parseFloat","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","findSegmentEnd","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","isLineAndNotInHideAnimation","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","getTarget","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","lineLoop","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","hitbox","_draw","defaultColor","rtlHelper","rtl","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","leftForLtr","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","radiusAndPadding","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","buildPointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","numberOrZero","param","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_maxIndex","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"sources":["C:/Users/barnw/OneDrive/Desktop/H-M-System-MERN/Hospital-Management-System-MERN/frontend/node_modules/chart.js/dist/chart.esm.js"],"sourcesContent":["/*!\n * Chart.js v3.4.0\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as log10, J as _factorize, K as finiteOrDefault, L as callback, M as _addGrace, N as toDegrees, O as _measureText, Q as _int16Range, R as _alignPixel, S as clipArea, U as renderText, V as unclipArea, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as setsEqual, ac as _elementsEqual, ad as getAngleFromPoint, ae as _readValueToProps, af as _updateBezierControlPoints, ag as _computeSegments, ah as _boundSegments, ai as _steppedInterpolation, aj as _bezierInterpolation, ak as _pointInLine, al as _steppedLineTo, am as _bezierCurveTo, an as drawPoint, ao as addRoundedRectPath, ap as toTRBL, aq as toTRBLCorners, ar as _boundSegment, as as _normalizeAngle, at as getRtlAdapter, au as overrideTextDirection, av as _textX, aw as restoreTextDirection, ax as noop, ay as distanceBetweenPoints, az as _setMinAndMaxByKey, aA as niceNum, aB as almostWhole, aC as almostEquals, aD as _decimalPlaces, aE as _longestText, aF as _filterBetween, aG as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[axis][meta.index];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._syncList.push(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._syncList.push(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._syncList.push(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._syncList.push(['_removeElements', start, count]);\n    this._syncList.push(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._syncList.push(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (me.index === stack._top || me.index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {vScale, _stacked} = me._cachedMeta;\n    const {base: baseValue, minBarLength} = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.bottom : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && _getParentNode(container));\n  }\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right} = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.4.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {visible});\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {options, circumference} = me;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset, spacing);\n    drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = me._margins.left;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = me._margins.top;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}}} = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin),\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = _lookup(table, val);\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {min, max} = me;\n    if (!timestamps.length) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    const items = [min];\n    let i, ilen, curr;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n    items.push(max);\n    return items;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index)\n      ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}