{"ast":null,"code":"import axios from 'axios';\nimport { DOCTOR_LOGIN_REQUEST, DOCTOR_LOGIN_SUCCESS, DOCTOR_LOGIN_FAIL, DOCTOR_REGISTER_REQUEST, DOCTOR_REGISTER_SUCCESS, DOCTOR_REGISTER_FAIL, DOCTOR_LOGOUT } from '../constants/doctorConstants';\nexport const doctorLoginAction = (email, password) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: DOCTOR_LOGIN_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(\n    // \"http://localhost:5000/api/doctors/loginHospital\"\n    \"http://localhost:5000/api/doctor/doc_login\", {\n      email,\n      password\n    });\n    console.log(data);\n    dispatch({\n      type: DOCTOR_LOGIN_SUCCESS,\n      payload: data\n    });\n\n    // save loginuser to localstorage\n    // localStorage.setItem(\"doctorInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: DOCTOR_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n    throw new Error(error);\n  }\n};\nexport const doctorRegisterAction = (name, email, speciality, contact, organization, graduatedFrom, password) => async dispatch => {\n  try {\n    dispatch({\n      type: DOCTOR_REGISTER_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(\"http://localhost:5000/api/doctor/doc_register\", {\n      name,\n      email,\n      speciality,\n      contact,\n      organization,\n      graduatedFrom,\n      password\n    });\n    console.log(data);\n    dispatch({\n      type: DOCTOR_REGISTER_SUCCESS,\n      payload: data\n    });\n    // const data = { ...others, password };\n\n    // localStorage.setItem(\"doctorInfo\", JSON.stringify(data));\n  } catch (err) {\n    dispatch({\n      type: DOCTOR_REGISTER_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n    throw new Error(err);\n  }\n};","map":{"version":3,"names":["axios","DOCTOR_LOGIN_REQUEST","DOCTOR_LOGIN_SUCCESS","DOCTOR_LOGIN_FAIL","DOCTOR_REGISTER_REQUEST","DOCTOR_REGISTER_SUCCESS","DOCTOR_REGISTER_FAIL","DOCTOR_LOGOUT","doctorLoginAction","email","password","dispatch","getState","type","data","post","console","log","payload","error","response","message","Error","doctorRegisterAction","name","speciality","contact","organization","graduatedFrom","err"],"sources":["C:/Users/barnw/OneDrive/Desktop/H-M-System-MERN/Hospital-Management-System-MERN/frontend/src/actions/doctorActions.js"],"sourcesContent":["import axios from 'axios'\r\nimport {\r\n   DOCTOR_LOGIN_REQUEST,DOCTOR_LOGIN_SUCCESS,DOCTOR_LOGIN_FAIL,\r\n   DOCTOR_REGISTER_REQUEST,DOCTOR_REGISTER_SUCCESS,DOCTOR_REGISTER_FAIL,DOCTOR_LOGOUT,\r\n} from '../constants/doctorConstants'\r\n\r\n\r\nexport const doctorLoginAction = (email, password) => async (\r\n    dispatch,\r\n    getState\r\n) => {\r\n    try {\r\n        dispatch({ type: DOCTOR_LOGIN_REQUEST });\r\n        const { data } = await axios.post(\r\n            // \"http://localhost:5000/api/doctors/loginHospital\"\r\n            \"http://localhost:5000/api/doctor/doc_login\",\r\n            {\r\n                email,\r\n                password,\r\n            }\r\n        );\r\n        console.log(data);\r\n\r\n        dispatch({\r\n            type: DOCTOR_LOGIN_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n        // save loginuser to localstorage\r\n        // localStorage.setItem(\"doctorInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DOCTOR_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n\r\n        throw new Error(error);\r\n    }\r\n};\r\n\r\n\r\nexport const doctorRegisterAction = (\r\n    name,\r\n    email,\r\n    speciality,\r\n    contact,\r\n    organization,\r\n    graduatedFrom,\r\n    password\r\n) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: DOCTOR_REGISTER_REQUEST,\r\n        });\r\n\r\n        const {\r\n            data,\r\n        } = await axios.post(\r\n            \"http://localhost:5000/api/doctor/doc_register\",\r\n            {\r\n                name,\r\n                email,\r\n                speciality,\r\n                contact,\r\n                organization,\r\n                graduatedFrom,\r\n                password\r\n            }\r\n        );\r\n        console.log(data);\r\n        dispatch({\r\n            type: DOCTOR_REGISTER_SUCCESS,\r\n            payload: data,\r\n        });\r\n        // const data = { ...others, password };\r\n\r\n        // localStorage.setItem(\"doctorInfo\", JSON.stringify(data));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: DOCTOR_REGISTER_FAIL,\r\n            payload:\r\n                err.response && err.response.data.message\r\n                    ? err.response.data.message\r\n                    : err.message,\r\n        });\r\n        throw new Error(err)\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACGC,oBAAoB,EAACC,oBAAoB,EAACC,iBAAiB,EAC3DC,uBAAuB,EAACC,uBAAuB,EAACC,oBAAoB,EAACC,aAAa,QAC9E,8BAA8B;AAGrC,OAAO,MAAMC,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK,OAClDC,QAAQ,EACRC,QAAQ,KACP;EACD,IAAI;IACAD,QAAQ,CAAC;MAAEE,IAAI,EAAEZ;IAAqB,CAAC,CAAC;IACxC,MAAM;MAAEa;IAAK,CAAC,GAAG,MAAMd,KAAK,CAACe,IAAI;IAC7B;IACA,4CAA4C,EAC5C;MACIN,KAAK;MACLC;IACJ,CACJ,CAAC;IACDM,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IAEjBH,QAAQ,CAAC;MACLE,IAAI,EAAEX,oBAAoB;MAC1BgB,OAAO,EAAEJ;IACb,CAAC,CAAC;;IAEF;IACA;EACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;IACZR,QAAQ,CAAC;MACLE,IAAI,EAAEV,iBAAiB;MACvBe,OAAO,EACHC,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACN,IAAI,CAACO,OAAO,GACvCF,KAAK,CAACC,QAAQ,CAACN,IAAI,CAACO,OAAO,GAC3BF,KAAK,CAACE;IACpB,CAAC,CAAC;IAEF,MAAM,IAAIC,KAAK,CAACH,KAAK,CAAC;EAC1B;AACJ,CAAC;AAGD,OAAO,MAAMI,oBAAoB,GAAGA,CAChCC,IAAI,EACJf,KAAK,EACLgB,UAAU,EACVC,OAAO,EACPC,YAAY,EACZC,aAAa,EACblB,QAAQ,KACP,MAAOC,QAAQ,IAAK;EACrB,IAAI;IACAA,QAAQ,CAAC;MACLE,IAAI,EAAET;IACV,CAAC,CAAC;IAEF,MAAM;MACFU;IACJ,CAAC,GAAG,MAAMd,KAAK,CAACe,IAAI,CAChB,+CAA+C,EAC/C;MACIS,IAAI;MACJf,KAAK;MACLgB,UAAU;MACVC,OAAO;MACPC,YAAY;MACZC,aAAa;MACblB;IACJ,CACJ,CAAC;IACDM,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACjBH,QAAQ,CAAC;MACLE,IAAI,EAAER,uBAAuB;MAC7Ba,OAAO,EAAEJ;IACb,CAAC,CAAC;IACF;;IAEA;EACJ,CAAC,CAAC,OAAOe,GAAG,EAAE;IACVlB,QAAQ,CAAC;MACLE,IAAI,EAAEP,oBAAoB;MAC1BY,OAAO,EACHW,GAAG,CAACT,QAAQ,IAAIS,GAAG,CAACT,QAAQ,CAACN,IAAI,CAACO,OAAO,GACnCQ,GAAG,CAACT,QAAQ,CAACN,IAAI,CAACO,OAAO,GACzBQ,GAAG,CAACR;IAClB,CAAC,CAAC;IACF,MAAM,IAAIC,KAAK,CAACO,GAAG,CAAC;EACxB;AACJ,CAAC"},"metadata":{},"sourceType":"module"}