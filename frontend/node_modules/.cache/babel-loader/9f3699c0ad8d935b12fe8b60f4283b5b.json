{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_LOGOUT } from '../constants/userConstants';\nexport const userLoginAction = (email, password) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const {\n      data\n    } = await axios.post('http://localhost:5000/api/user/login', {\n      email,\n      password\n    });\n    console.log(data);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n    throw new Error(error);\n  }\n};\nexport const userLogOutAction = () => async dispatch => {\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const userRegisterAction = (name, email, dob, contacts, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(\"http://localhost:5000/api/user/register\", {\n      name,\n      email,\n      password,\n      dob,\n      contacts\n    });\n    console.log(data);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n\n    // localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (err) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n    throw new Error(err);\n  }\n};","map":{"version":3,"names":["axios","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_LOGOUT","userLoginAction","email","password","dispatch","getState","type","data","post","console","log","payload","error","response","message","Error","userLogOutAction","userRegisterAction","name","dob","contacts","err"],"sources":["C:/Users/barnw/OneDrive/Desktop/H-M-System-MERN/Hospital-Management-System-MERN/frontend/src/actions/userActions.js"],"sourcesContent":["import axios from 'axios'\r\nimport {\r\n  USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL,\r\n  USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_LOGOUT,\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginAction = (email, password) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST })\r\n    const { data } = await axios.post('http://localhost:5000/api/user/login', { email, password })\r\n    console.log(data)\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message\r\n        : error.message\r\n    })\r\n    throw new Error(error);\r\n  }\r\n}\r\n\r\nexport const userLogOutAction = () => async (dispatch) => {\r\n  dispatch({\r\n    type: USER_LOGOUT\r\n  })\r\n}\r\n\r\nexport const userRegisterAction = (name, email, dob, contacts, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const { data } = await axios.post(\"http://localhost:5000/api/user/register\", { name, email, password, dob, contacts });\r\n    console.log(data)\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    // localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n    throw new Error(err);\r\n  }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,kBAAkB,EAAEC,kBAAkB,EAAEC,eAAe,EACvDC,qBAAqB,EAAEC,qBAAqB,EAAEC,kBAAkB,EAAEC,WAAW,QACxE,4BAA4B;AAEnC,OAAO,MAAMC,eAAe,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAChF,IAAI;IACFD,QAAQ,CAAC;MAAEE,IAAI,EAAEZ;IAAmB,CAAC,CAAC;IACtC,MAAM;MAAEa;IAAK,CAAC,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,sCAAsC,EAAE;MAAEN,KAAK;MAAEC;IAAS,CAAC,CAAC;IAC9FM,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IAEjBH,QAAQ,CAAC;MACPE,IAAI,EAAEX,kBAAkB;MACxBgB,OAAO,EAAEJ;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdR,QAAQ,CAAC;MACPE,IAAI,EAAEV,eAAe;MACrBe,OAAO,EAAEC,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACN,IAAI,CAACO,OAAO,GAAGF,KAAK,CAACC,QAAQ,CAACN,IAAI,CAACO,OAAO,GAChFF,KAAK,CAACE;IACZ,CAAC,CAAC;IACF,MAAM,IAAIC,KAAK,CAACH,KAAK,CAAC;EACxB;AACF,CAAC;AAED,OAAO,MAAMI,gBAAgB,GAAGA,CAAA,KAAM,MAAOZ,QAAQ,IAAK;EACxDA,QAAQ,CAAC;IACPE,IAAI,EAAEN;EACR,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMiB,kBAAkB,GAAGA,CAACC,IAAI,EAAEhB,KAAK,EAAEiB,GAAG,EAAEC,QAAQ,EAAEjB,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC9F,IAAI;IACFA,QAAQ,CAAC;MACPE,IAAI,EAAET;IACR,CAAC,CAAC;IAEF,MAAM;MAAEU;IAAK,CAAC,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,yCAAyC,EAAE;MAAEU,IAAI;MAAEhB,KAAK;MAAEC,QAAQ;MAAEgB,GAAG;MAAEC;IAAS,CAAC,CAAC;IACtHX,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACjBH,QAAQ,CAAC;MACPE,IAAI,EAAER,qBAAqB;MAC3Ba,OAAO,EAAEJ;IACX,CAAC,CAAC;;IAEF;EAEF,CAAC,CAAC,OAAOc,GAAG,EAAE;IACZjB,QAAQ,CAAC;MACPE,IAAI,EAAEP,kBAAkB;MACxBY,OAAO,EACLU,GAAG,CAACR,QAAQ,IAAIQ,GAAG,CAACR,QAAQ,CAACN,IAAI,CAACO,OAAO,GACrCO,GAAG,CAACR,QAAQ,CAACN,IAAI,CAACO,OAAO,GACzBO,GAAG,CAACP;IACZ,CAAC,CAAC;IACF,MAAM,IAAIC,KAAK,CAACM,GAAG,CAAC;EACtB;AACF,CAAC"},"metadata":{},"sourceType":"module"}